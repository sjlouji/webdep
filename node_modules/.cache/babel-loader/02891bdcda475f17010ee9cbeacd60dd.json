{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/Component/InfinityScroll.js\";\nimport React, { useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NumericLabel from 'react-pretty-numbers';\nimport Typography from '@material-ui/core/Typography';\nimport { Row, Col } from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport { Container, Divider } from '@material-ui/core';\nimport TextTruncate from 'react-text-truncate'; // recommend\n\nconst items = new Array(30).fill(0).map((_, index) => ({\n  id: index,\n  name: `Number ${index}`\n}));\n\nfunction InfiniteScrolls(props) {\n  const [loadedIems, setLoadedItems] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  const loadMore = (offset = 0, limit = 10) => {\n    if (offset + limit > items.length) {\n      return;\n    }\n\n    console.log(\"Loading more\");\n    setOffset(offset => {\n      return offset + limit;\n    });\n    setLoadedItems(loadedItems => {\n      return [...loadedItems, ...items.slice(offset, offset + limit)];\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Hello CodeSandbox\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Start editing to see some magic happen!\"), console.log(props), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    loadMore: () => loadMore(offset),\n    hasMore: true,\n    loader: /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }),\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, props ? props.map(data => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: {\n      marginTop: '20px '\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '260px',\n      height: 'fit-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    alt: data.title,\n    height: \"140\",\n    image: data.thumbnailsHight,\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    style: {\n      marginLeft: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      padding: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    component: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }, data.title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"caption\",\n    component: \"body1\",\n    style: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextTruncate, {\n    line: 2,\n    element: \"span\",\n    truncateText: \"\\u2026\",\n    text: data.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(NumericLabel, {\n    params: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 61\n    }\n  }, data.viewCount))), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 57\n    }\n  }, \"views\")))), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 49\n    }\n  }, \"Published  \", /*#__PURE__*/React.createElement(Moment, {\n    fromNow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 64\n    }\n  }, data.publishedAt)))))))) : \"\"));\n}\n\nexport default InfiniteScrolls;","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/Component/InfinityScroll.js"],"names":["React","useState","InfiniteScroll","CircularProgress","CardContent","CardMedia","Moment","Skeleton","NumericLabel","Typography","Row","Col","Grid","Container","Divider","TextTruncate","items","Array","fill","map","_","index","id","name","InfiniteScrolls","props","loadedIems","setLoadedItems","offset","setOffset","loadMore","limit","length","console","log","loadedItems","slice","data","marginTop","width","height","title","thumbnailsHight","marginLeft","padding","textOverflow","overflow","description","option","viewCount","publishedAt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NumericLabel from 'react-pretty-numbers'\nimport Typography from '@material-ui/core/Typography';\nimport {Row, Col} from 'react-bootstrap';\nimport Grid from '@material-ui/core/Grid';\nimport { Container, Divider } from '@material-ui/core';\nimport TextTruncate from 'react-text-truncate'; // recommend\n\nconst items = new Array(30).fill(0).map((_, index) => ({\n  id: index,\n  name: `Number ${index}`\n}));\n\nfunction InfiniteScrolls(props) {\n  const [loadedIems, setLoadedItems] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  const loadMore = (offset = 0, limit = 10) => {\n    if (offset + limit > items.length) {\n      return;\n    }\n    console.log(\"Loading more\");\n    setOffset(offset => {\n      return offset + limit;\n    });\n    setLoadedItems(loadedItems => {\n      return [...loadedItems, ...items.slice(offset, offset + limit)];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n      {console.log(props)}\n\n      <InfiniteScroll\n        loadMore={() => loadMore(offset)}\n        hasMore={true}\n        loader={<CircularProgress />}\n        container\n        spacing={3}\n      >\n        {props ? props\n                        .map((data)=>(\n                            <Grid container style={{  marginTop: '20px ' }}> \n                                <Grid item  xs={3.8}>\n                                    <div style={{ width: '260px', height: 'fit-content' }}>\n                                        <CardMedia\n                                        component=\"img\"\n                                        alt={data.title}\n                                        height=\"140\"\n                                        image={data.thumbnailsHight}\n                                        title=\"Contemplative Reptile\"\n                                        />\n                                    </div>\n                                </Grid>\n                                <Grid item  xs={8} style={{ marginLeft: '18px' }}>\n                                    <CardContent  style={{ padding: '0' }}>\n                                        <Typography gutterBottom variant=\"h6\" component=\"h5\">\n                                            {data.title}\n                                        </Typography>\n                                        <Typography gutterBottom variant=\"caption\" component=\"body1\" style={{ textOverflow:  'ellipsis', overflow: 'hidden' }}>\n                                            <TextTruncate\n                                                line={2}\n                                                element=\"span\"\n                                                truncateText=\"…\"\n                                                text={data.description}\n                                            />\n                                        </Typography>\n                                        <Grid container>\n                                            <Grid style={{ marginTop: '20px' }}>\n                                                <Row xs={3}>\n                                                    <Col xs={1}>\n                                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                            <NumericLabel params={option}>{data.viewCount}</NumericLabel> \n                                                        </Typography>\n                                                    </Col>\n                                                    <Col xs={2}>\n                                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                            views\n                                                        </Typography>\n                                                    </Col>\n                                                </Row>\n                                            </Grid>\n                                            <Grid  style={{ marginTop: '20px' }}>\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                    Published  <Moment fromNow>{data.publishedAt}</Moment>\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                </CardContent>          \n                                </Grid>\n                            </Grid>\n                        )):\n                            \"\"\n                    }\n\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default InfiniteScrolls\n"]},"metadata":{},"sourceType":"module"}