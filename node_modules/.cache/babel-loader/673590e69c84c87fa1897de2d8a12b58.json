{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/Component/InfiniteScrolls.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport \"./styles.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst items = new Array(30).fill(0).map((_, index) => ({\n  id: index,\n  name: `Number ${index}`\n}));\nexport function InfiniteScrolls() {\n  const [loadedIems, setLoadedItems] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  const loadMore = (offset = 0, limit = 10) => {\n    if (offset + limit > items.length) {\n      return;\n    }\n\n    console.log(\"Loading more\");\n    setOffset(offset => {\n      return offset + limit;\n    });\n    setLoadedItems(loadedItems => {\n      return [...loadedItems, ...items.slice(offset, offset + limit)];\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Hello CodeSandbox\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Start editing to see some magic happen!\"), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    loadMore: () => loadMore(offset),\n    hasMore: true,\n    loader: /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }),\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, loadedIems.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      style: {\n        border: \"1px solid\",\n        padding: 20,\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, item.name);\n  })));\n}\nexport default InfiniteScrolls;","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/Component/InfiniteScrolls.js"],"names":["React","useState","ReactDOM","InfiniteScroll","CircularProgress","items","Array","fill","map","_","index","id","name","InfiniteScrolls","loadedIems","setLoadedItems","offset","setOffset","loadMore","limit","length","console","log","loadedItems","slice","item","border","padding","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAO,cAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,MAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,EAAsBC,GAAtB,CAA0B,CAACC,CAAD,EAAIC,KAAJ,MAAe;AACrDC,EAAAA,EAAE,EAAED,KADiD;AAErDE,EAAAA,IAAI,EAAG,UAASF,KAAM;AAF+B,CAAf,CAA1B,CAAd;AAKA,OAAO,SAASG,eAAT,GAA2B;AAChC,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+Bd,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMiB,QAAQ,GAAG,CAACF,MAAM,GAAG,CAAV,EAAaG,KAAK,GAAG,EAArB,KAA4B;AAC3C,QAAIH,MAAM,GAAGG,KAAT,GAAiBd,KAAK,CAACe,MAA3B,EAAmC;AACjC;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAL,IAAAA,SAAS,CAACD,MAAM,IAAI;AAClB,aAAOA,MAAM,GAAGG,KAAhB;AACD,KAFQ,CAAT;AAGAJ,IAAAA,cAAc,CAACQ,WAAW,IAAI;AAC5B,aAAO,CAAC,GAAGA,WAAJ,EAAiB,GAAGlB,KAAK,CAACmB,KAAN,CAAYR,MAAZ,EAAoBA,MAAM,GAAGG,KAA7B,CAApB,CAAP;AACD,KAFa,CAAd;AAGD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFF,eAIE,oBAAC,cAAD;AACE,IAAA,QAAQ,EAAE,MAAMD,QAAQ,CAACF,MAAD,CAD1B;AAEE,IAAA,OAAO,EAAE,IAFX;AAGE,IAAA,MAAM,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGF,UAAU,CAACN,GAAX,CAAeiB,IAAI,IAAI;AACtB,wBACE;AACE,MAAA,GAAG,EAAEA,IAAI,CAACd,EADZ;AAEE,MAAA,KAAK,EAAE;AACLe,QAAAA,MAAM,EAAE,WADH;AAELC,QAAAA,OAAO,EAAE,EAFJ;AAGLC,QAAAA,YAAY,EAAE;AAHT,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGH,IAAI,CAACb,IARR,CADF;AAYD,GAbA,CAPH,CAJF,CADF;AA6BD;AAED,eAAeC,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport \"./styles.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst items = new Array(30).fill(0).map((_, index) => ({\n  id: index,\n  name: `Number ${index}`\n}));\n\nexport function InfiniteScrolls() {\n  const [loadedIems, setLoadedItems] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  const loadMore = (offset = 0, limit = 10) => {\n    if (offset + limit > items.length) {\n      return;\n    }\n    console.log(\"Loading more\");\n    setOffset(offset => {\n      return offset + limit;\n    });\n    setLoadedItems(loadedItems => {\n      return [...loadedItems, ...items.slice(offset, offset + limit)];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n\n      <InfiniteScroll\n        loadMore={() => loadMore(offset)}\n        hasMore={true}\n        loader={<CircularProgress />}\n        container\n        spacing={3}\n      >\n        {loadedIems.map(item => {\n          return (\n            <div\n              key={item.id}\n              style={{\n                border: \"1px solid\",\n                padding: 20,\n                marginBottom: 10\n              }}\n            >\n              {item.name}\n            </div>\n          );\n        })}\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default InfiniteScrolls"]},"metadata":{},"sourceType":"module"}