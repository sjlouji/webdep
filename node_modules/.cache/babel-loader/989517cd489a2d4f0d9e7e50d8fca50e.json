{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Watch/Transcript/Transcript.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport store from '../../../store/configureStore';\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\nexport class Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    store.subscribe(() => {\n      this.setState({\n        items: store.getState().youtube.ydata\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      dividing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"Transcription\")), this.state.items ? this.state.items.map(item => {\n      if (item.videoId === this.props.value) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }\n        }, item.transcript);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }\n        });\n      }\n    }) : '');\n  }\n\n}\nexport default Transcript;","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Watch/Transcript/Transcript.js"],"names":["React","Component","connect","store","Button","Comment","Form","Header","Transcript","constructor","props","state","items","subscribe","setState","getState","youtube","ydata","render","margin","map","item","videoId","value","transcript"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,mBAA9C;AAEA,OAAO,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AACtCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIAT,IAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,WAAKC,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAET,KAAK,CAACY,QAAN,GAAiBC,OAAjB,CAAyBC;AADpB,OAAd;AAGD,KAJD;AAKD;;AACHC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CADJ,EAMK,KAAKR,KAAL,CAAWC,KAAX,GAAiB,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAsBC,IAAD,IAAU;AACzC,UAAGA,IAAI,CAACC,OAAL,KAAiB,KAAKZ,KAAL,CAAWa,KAA/B,EAAqC;AACjC,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKF,IAAI,CAACG,UADV,CADJ;AAKH,OAND,MAOI;AACA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AACR,KAfiB,CAAjB,GAgBC,EAtBN,CADJ;AA0BH;;AAzCqC;AA6C1C,eAAgBhB,UAAhB","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport store from '../../../store/configureStore';\nimport { Button, Comment, Form, Header } from 'semantic-ui-react'\n\nexport class Transcript extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          items: [],\n        };\n    \n        store.subscribe(() => {\n          this.setState({\n            items: store.getState().youtube.ydata,\n          });\n        });\n      }\n    render() {\n        return (\n            <div>\n                <div style={{ margin: '10px' }}>\n                <Header as='h3' dividing>\n                    Transcription\n                </Header>\n                </div>\n                {this.state.items?this.state.items.map((item) => {\n                        if(item.videoId === this.props.value){\n                            return(\n                                <div>\n                                    {item.transcript}\n                                </div>\n                            )\n                        }\n                        else{\n                            return(\n                                <div>\n                                    \n                                </div>\n                            )\n                        }\n                }\n                ):''}\n            </div>\n        )\n    }\n}\n\n\nexport default (Transcript);\n"]},"metadata":{},"sourceType":"module"}