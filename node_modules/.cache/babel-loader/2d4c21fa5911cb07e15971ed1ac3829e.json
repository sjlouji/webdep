{"ast":null,"code":"/**\n * Calendar constructor\n *\n * @param   {Object}  options               Calendar options\n *   @param {Object}  options.startDate     Date object indicating the selected start date\n *   @param {Object}  options.endDate       Date object indicating the selected end date\n *   @param {Boolean} options.siblingMonths Calculate dates from sibling months (before and after the current month, based on weekStart)\n *   @param {Boolean} options.weekNumbers   Caclulate the week days\n *   @param {Number}  options.weekStart     Day of the week to start the calendar, respects `Date.prototype.getDay` (defaults to `0`, Sunday)\n */\nfunction Calendar(options) {\n  options = options || {};\n  this.startDate = options.startDate;\n  this.endDate = options.endDate;\n  this.siblingMonths = options.siblingMonths;\n  this.weekNumbers = options.weekNumbers;\n  this.weekStart = options.weekStart;\n\n  if (this.weekStart === undefined) {\n    this.weekStart = 0;\n  }\n\n  this.date = new Date(1986, 9, 14, 0, 0, 0);\n}\n/**\n * Calculate a calendar month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Array}        Calendar days\n */\n\n\nCalendar.prototype.getCalendar = function (year, month) {\n  this.date.setUTCFullYear(year);\n  this.date.setUTCMonth(month);\n  this.date.setUTCDate(1);\n  year = this.date.getUTCFullYear();\n  month = this.date.getUTCMonth();\n  var calendar = [],\n      firstDay = this.date.getUTCDay(),\n      firstDate = -((7 - this.weekStart + firstDay) % 7),\n      lastDate = Calendar.daysInMonth(year, month),\n      lastDay = (lastDate - firstDate) % 7,\n      lastDatePreviousMonth = Calendar.daysInMonth(year, month - 1),\n      i = firstDate,\n      max = lastDate - i + (lastDay != 0 ? 7 - lastDay : 0) + firstDate,\n      currentDay,\n      currentDate,\n      currentDateObject,\n      currentWeekNumber = null,\n      otherMonth,\n      otherYear;\n\n  while (i < max) {\n    currentDate = i + 1;\n    currentDay = ((i < 1 ? 7 + i : i) + firstDay) % 7;\n\n    if (currentDate < 1 || currentDate > lastDate) {\n      if (this.siblingMonths) {\n        if (currentDate < 1) {\n          otherMonth = month - 1;\n          otherYear = year;\n\n          if (otherMonth < 0) {\n            otherMonth = 11;\n            otherYear--;\n          }\n\n          currentDate = lastDatePreviousMonth + currentDate;\n        } else if (currentDate > lastDate) {\n          otherMonth = month + 1;\n          otherYear = year;\n\n          if (otherMonth > 11) {\n            otherMonth = 0;\n            otherYear++;\n          }\n\n          currentDate = i - lastDate + 1;\n        }\n\n        currentDateObject = {\n          day: currentDate,\n          weekDay: currentDay,\n          month: otherMonth,\n          year: otherYear,\n          siblingMonth: true\n        };\n      } else {\n        currentDateObject = false;\n      }\n    } else {\n      currentDateObject = {\n        day: currentDate,\n        weekDay: currentDay,\n        month: month,\n        year: year\n      };\n    }\n\n    if (currentDateObject && this.weekNumbers) {\n      if (currentWeekNumber === null) {\n        currentWeekNumber = Calendar.calculateWeekNumber(currentDateObject);\n      } else if (currentDay == 1 && currentWeekNumber == 52) {\n        currentWeekNumber = 1;\n      } else if (currentDay == 1) {\n        currentWeekNumber++;\n      }\n\n      currentDateObject.weekNumber = currentWeekNumber;\n    }\n\n    if (currentDateObject && this.startDate) {\n      currentDateObject.selected = this.isDateSelected(currentDateObject);\n    }\n\n    calendar.push(currentDateObject);\n    i++;\n  }\n\n  return calendar;\n};\n/**\n * Checks if a date is selected\n *\n * @param  {Object}  date Date object\n * @return {Boolean}      Selected status of the date\n */\n\n\nCalendar.prototype.isDateSelected = function (date) {\n  if (date.year == this.startDate.year && date.month == this.startDate.month && date.day == this.startDate.day) {\n    return true;\n  } else if (this.endDate) {\n    if (date.year == this.startDate.year && date.month == this.startDate.month && date.day < this.startDate.day) {\n      return false;\n    } else if (date.year == this.endDate.year && date.month == this.endDate.month && date.day > this.endDate.day) {\n      return false;\n    } else if (date.year == this.startDate.year && date.month < this.startDate.month) {\n      return false;\n    } else if (date.year == this.endDate.year && date.month > this.endDate.month) {\n      return false;\n    } else if (date.year < this.startDate.year) {\n      return false;\n    } else if (date.year > this.endDate.year) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n/**\n * Sets the selected period start\n *\n * @param {Object} date Date object\n */\n\n\nCalendar.prototype.setStartDate = function (date) {\n  this.startDate = date;\n};\n/**\n * Sets the selected period end\n *\n * @param {Object} date Date object\n */\n\n\nCalendar.prototype.setEndDate = function (date) {\n  this.endDate = date;\n};\n/**\n * Sets one selected date\n *\n * @param {Object} date Date object\n */\n\n\nCalendar.prototype.setDate = Calendar.prototype.setStartDate;\n/**\n * Calculates the difference between two dates (date1 - date2), in days\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Days between the dates\n */\n\nCalendar.diff = function (date1, date2) {\n  var oDate1 = new Date(1986, 9, 14, 0, 0, 0),\n      oDate2 = new Date(1986, 9, 14, 0, 0, 0);\n  oDate1.setUTCFullYear(date1.year);\n  oDate1.setUTCMonth(date1.month);\n  oDate1.setUTCDate(date1.day);\n  oDate2.setUTCFullYear(date2.year);\n  oDate2.setUTCMonth(date2.month);\n  oDate2.setUTCDate(date2.day);\n  return Math.ceil((oDate1.getTime() - oDate2.getTime()) / 86400000);\n};\n/**\n * Calculates the interval between two dates\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Number of days\n */\n\n\nCalendar.interval = function (date1, date2) {\n  return Math.abs(Calendar.diff(date1, date2)) + 1;\n};\n/**\n * Calculates the number of days in a month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Number}       Length of the month\n */\n\n\nCalendar.daysInMonth = function (year, month) {\n  return new Date(year, month + 1, 0).getDate();\n};\n/**\n * Calculates if a given year is a leap year\n *\n * @param  {Number}  year Year\n * @return {Boolean}      Leap year or not\n */\n\n\nCalendar.isLeapYear = function (year) {\n  return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n};\n/**\n * Calculates the week number for a given date\n *\n * @param  {Object} date Date object\n * @return {Number}      Week number\n */\n// Adapted from http://techblog.procurios.nl/k/news/view/33796/14863/calculate-iso-8601-week-and-year-in-javascript.html\n\n\nCalendar.calculateWeekNumber = function (date) {\n  // Creates the requested date\n  var current = new Date(1986, 9, 14, 0, 0, 0);\n  current.setUTCFullYear(date.year);\n  current.setUTCMonth(date.month);\n  current.setUTCDate(date.day); // Create a copy of the object\n\n  var target = new Date(current.valueOf()); // ISO week date weeks start on monday so correct the day number\n\n  var dayNr = (current.getUTCDay() + 6) % 7; // ISO 8601 states that week 1 is the week with the first thursday of that\n  // year. Set the target date to the thursday in the target week.\n\n  target.setUTCDate(target.getUTCDate() - dayNr + 3); // Store the millisecond value of the target date\n\n  var firstThursday = target.valueOf(); // Set the target to the first thursday of the year\n  // First set the target to january first\n\n  target.setUTCMonth(0, 1); // Not a thursday? Correct the date to the next thursday\n\n  if (target.getUTCDay() != 4) {\n    target.setUTCMonth(0, 1 + (4 - target.getUTCDay() + 7) % 7);\n  } // The weeknumber is the number of weeks between the  first thursday of the\n  // year and the thursday in the target week.\n  // 604800000 = 7 * 24 * 3600 * 1000\n\n\n  return 1 + Math.ceil((firstThursday - target) / 604800000);\n};\n/**\n * Exports the Calendar\n */\n\n\nmodule.exports = {\n  Calendar: Calendar\n};","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/node_modules/calendar-base/lib/calendar-base.js"],"names":["Calendar","options","startDate","endDate","siblingMonths","weekNumbers","weekStart","undefined","date","Date","prototype","getCalendar","year","month","setUTCFullYear","setUTCMonth","setUTCDate","getUTCFullYear","getUTCMonth","calendar","firstDay","getUTCDay","firstDate","lastDate","daysInMonth","lastDay","lastDatePreviousMonth","i","max","currentDay","currentDate","currentDateObject","currentWeekNumber","otherMonth","otherYear","day","weekDay","siblingMonth","calculateWeekNumber","weekNumber","selected","isDateSelected","push","setStartDate","setEndDate","setDate","diff","date1","date2","oDate1","oDate2","Math","ceil","getTime","interval","abs","getDate","isLeapYear","current","target","valueOf","dayNr","getUTCDate","firstThursday","module","exports"],"mappings":"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","sourcesContent":["/**\n * Calendar constructor\n *\n * @param   {Object}  options               Calendar options\n *   @param {Object}  options.startDate     Date object indicating the selected start date\n *   @param {Object}  options.endDate       Date object indicating the selected end date\n *   @param {Boolean} options.siblingMonths Calculate dates from sibling months (before and after the current month, based on weekStart)\n *   @param {Boolean} options.weekNumbers   Caclulate the week days\n *   @param {Number}  options.weekStart     Day of the week to start the calendar, respects `Date.prototype.getDay` (defaults to `0`, Sunday)\n */\nfunction Calendar (options) {\n\toptions = options || {};\n\n\tthis.startDate = options.startDate;\n\tthis.endDate = options.endDate;\n\tthis.siblingMonths = options.siblingMonths;\n\tthis.weekNumbers = options.weekNumbers;\n\tthis.weekStart = options.weekStart;\n\n\tif (this.weekStart === undefined) {\n\t\tthis.weekStart = 0;\n\t}\n\n\tthis.date = new Date(1986, 9, 14, 0, 0, 0);\n}\n\n/**\n * Calculate a calendar month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Array}        Calendar days\n */\nCalendar.prototype.getCalendar = function (year, month) {\n\tthis.date.setUTCFullYear(year);\n\tthis.date.setUTCMonth(month);\n\tthis.date.setUTCDate(1);\n\n\tyear = this.date.getUTCFullYear();\n\tmonth = this.date.getUTCMonth();\n\n\tvar calendar = [],\n\t\tfirstDay = this.date.getUTCDay(),\n\n\t\tfirstDate = - (((7 - this.weekStart) + firstDay) % 7),\n\t\tlastDate = Calendar.daysInMonth(year, month),\n\t\tlastDay = ((lastDate - firstDate) % 7),\n\t\tlastDatePreviousMonth = Calendar.daysInMonth(year, month - 1),\n\t\ti = firstDate,\n\t\tmax = (lastDate - i) + (lastDay != 0 ? 7 - lastDay : 0) + firstDate,\n\t\tcurrentDay,\n\t\tcurrentDate,\n\t\tcurrentDateObject,\n\t\tcurrentWeekNumber = null,\n\t\totherMonth,\n\t\totherYear;\n\n\twhile (i < max) {\n\t\tcurrentDate = i + 1;\n\t\tcurrentDay = ((i < 1 ? 7 + i : i) + firstDay) % 7;\n\t\tif (currentDate < 1 || currentDate > lastDate) {\n\t\t\tif (this.siblingMonths) {\n\t\t\t\tif (currentDate < 1) {\n\t\t\t\t\totherMonth = month - 1;\n\t\t\t\t\totherYear = year;\n\t\t\t\t\tif (otherMonth < 0) {\n\t\t\t\t\t\totherMonth = 11;\n\t\t\t\t\t\totherYear --;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentDate = lastDatePreviousMonth + currentDate;\n\t\t\t\t}\n\t\t\t\telse if (currentDate > lastDate) {\n\t\t\t\t\totherMonth = month + 1;\n\t\t\t\t\totherYear = year;\n\t\t\t\t\tif (otherMonth > 11) {\n\t\t\t\t\t\totherMonth = 0;\n\t\t\t\t\t\totherYear ++;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentDate = i - lastDate + 1;\n\t\t\t\t}\n\t\t\t\tcurrentDateObject = {\n\t\t\t\t\tday: currentDate,\n\t\t\t\t\tweekDay: currentDay,\n\t\t\t\t\tmonth: otherMonth,\n\t\t\t\t\tyear: otherYear,\n\t\t\t\t\tsiblingMonth: true\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrentDateObject = false;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcurrentDateObject = {\n\t\t\t\tday: currentDate,\n\t\t\t\tweekDay: currentDay,\n\t\t\t\tmonth: month,\n\t\t\t\tyear: year\n\t\t\t};\n\t\t}\n\n\t\tif (currentDateObject && this.weekNumbers) {\n\t\t\tif (currentWeekNumber === null) {\n\t\t\t\tcurrentWeekNumber = Calendar.calculateWeekNumber(currentDateObject);\n\t\t\t}\n\t\t\telse if (currentDay == 1 && currentWeekNumber == 52) {\n\t\t\t\tcurrentWeekNumber = 1;\n\t\t\t}\n\t\t\telse if (currentDay == 1) {\n\t\t\t\tcurrentWeekNumber ++;\n\t\t\t}\n\t\t\tcurrentDateObject.weekNumber = currentWeekNumber;\n\t\t}\n\n\t\tif (currentDateObject && this.startDate) {\n\t\t\tcurrentDateObject.selected = this.isDateSelected(currentDateObject);\n\t\t}\n\n\t\tcalendar.push(currentDateObject);\n\t\ti ++;\n\t}\n\n\treturn calendar;\n};\n\n/**\n * Checks if a date is selected\n *\n * @param  {Object}  date Date object\n * @return {Boolean}      Selected status of the date\n */\nCalendar.prototype.isDateSelected = function (date) {\n\tif (date.year == this.startDate.year && date.month == this.startDate.month && date.day == this.startDate.day) {\n\t\treturn true;\n\t}\n\telse if (this.endDate) {\n\t\tif (date.year == this.startDate.year && date.month == this.startDate.month && date.day < this.startDate.day) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year == this.endDate.year && date.month == this.endDate.month && date.day > this.endDate.day) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year == this.startDate.year && date.month < this.startDate.month) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year == this.endDate.year && date.month > this.endDate.month) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year < this.startDate.year) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (date.year > this.endDate.year) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n/**\n * Sets the selected period start\n *\n * @param {Object} date Date object\n */\nCalendar.prototype.setStartDate = function (date) {\n\tthis.startDate = date;\n};\n\n/**\n * Sets the selected period end\n *\n * @param {Object} date Date object\n */\nCalendar.prototype.setEndDate = function (date) {\n\tthis.endDate = date;\n};\n\n/**\n * Sets one selected date\n *\n * @param {Object} date Date object\n */\nCalendar.prototype.setDate = Calendar.prototype.setStartDate;\n\n/**\n * Calculates the difference between two dates (date1 - date2), in days\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Days between the dates\n */\nCalendar.diff = function (date1, date2) {\n\tvar oDate1 = new Date(1986, 9, 14, 0, 0, 0), oDate2 = new Date(1986, 9, 14, 0, 0, 0);\n\n\toDate1.setUTCFullYear(date1.year);\n\toDate1.setUTCMonth(date1.month);\n\toDate1.setUTCDate(date1.day);\n\n\toDate2.setUTCFullYear(date2.year);\n\toDate2.setUTCMonth(date2.month);\n\toDate2.setUTCDate(date2.day);\n\n\treturn Math.ceil((oDate1.getTime() - oDate2.getTime()) / 86400000);\n};\n\n/**\n * Calculates the interval between two dates\n *\n * @param  {Object} date1 Date object\n * @param  {Object} date2 Date object\n * @return {Number}       Number of days\n */\nCalendar.interval = function (date1, date2) {\n\treturn Math.abs(Calendar.diff(date1, date2)) + 1;\n};\n\n/**\n * Calculates the number of days in a month\n *\n * @param  {Number} year  Year\n * @param  {Number} month Month [0-11]\n * @return {Number}       Length of the month\n */\nCalendar.daysInMonth = function (year, month) {\n\treturn new Date(year, month + 1, 0).getDate();\n};\n\n/**\n * Calculates if a given year is a leap year\n *\n * @param  {Number}  year Year\n * @return {Boolean}      Leap year or not\n */\nCalendar.isLeapYear = function (year) {\n\treturn ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n}\n\n/**\n * Calculates the week number for a given date\n *\n * @param  {Object} date Date object\n * @return {Number}      Week number\n */\n// Adapted from http://techblog.procurios.nl/k/news/view/33796/14863/calculate-iso-8601-week-and-year-in-javascript.html\nCalendar.calculateWeekNumber = function (date) {\n\t// Creates the requested date\n\tvar current = new Date(1986, 9, 14, 0, 0, 0);\n\tcurrent.setUTCFullYear(date.year);\n\tcurrent.setUTCMonth(date.month);\n\tcurrent.setUTCDate(date.day);\n\n\t// Create a copy of the object\n\tvar target = new Date(current.valueOf());\n\n\t// ISO week date weeks start on monday so correct the day number\n\tvar dayNr = (current.getUTCDay() + 6) % 7;\n\n\t// ISO 8601 states that week 1 is the week with the first thursday of that\n\t// year. Set the target date to the thursday in the target week.\n\ttarget.setUTCDate(target.getUTCDate() - dayNr + 3);\n\n\t// Store the millisecond value of the target date\n\tvar firstThursday = target.valueOf();\n\n\t// Set the target to the first thursday of the year\n\n\t// First set the target to january first\n\ttarget.setUTCMonth(0, 1);\n\n\t// Not a thursday? Correct the date to the next thursday\n\tif (target.getUTCDay() != 4) {\n\t\ttarget.setUTCMonth(0, 1 + ((4 - target.getUTCDay()) + 7) % 7);\n\t}\n\n\t// The weeknumber is the number of weeks between the  first thursday of the\n\t// year and the thursday in the target week.\n\t// 604800000 = 7 * 24 * 3600 * 1000\n\treturn 1 + Math.ceil((firstThursday - target) / 604800000);\n}\n\n/**\n * Exports the Calendar\n */\nmodule.exports = { Calendar: Calendar };\n"]},"metadata":{},"sourceType":"script"}