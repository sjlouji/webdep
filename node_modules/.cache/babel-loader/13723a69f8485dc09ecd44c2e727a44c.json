{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/List.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NumericLabel from 'react-pretty-numbers';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Row, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { searchData } from '../../store/actions/youtube';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport { withRouter } from 'react-router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { Container, Divider } from '@material-ui/core';\nimport TextTruncate from 'react-text-truncate'; // recommend\n\nimport InfiniteScrolls from \"./Component/InfiniteScrolls\";\nconst option = {\n  'justification': 'L',\n  'locales': 'en-US',\n  'currency': false,\n  'percentage': false,\n  'wholenumber': 'ceil',\n  'commafy': true,\n  'cssClass': ['red'],\n  'shortFormat': true,\n  'shortFormatMinValue': 10000,\n  'title': true\n};\nexport class List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: Array.from({\n        length: 20\n      }),\n      hasMore: true\n    };\n\n    this.fetchMoreData = () => {\n      if (this.state.items.length >= 500) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      } // a fake async api call like which sends\n      // 20 more records in .5 secs\n\n\n      setTimeout(() => {\n        this.setState({\n          items: this.state.items.concat(Array.from({\n            length: 20\n          }))\n        });\n      }, 500);\n    };\n  }\n\n  componentDidMount() {\n    let str = this.props.location.search;\n\n    if (this.props.location.search) {\n      if (str.split('=')[1]) {\n        console.log(\"hey louji\");\n        this.props.searchData(str.split('=')[1]);\n      } else {\n        this.props.history.push(\"/\");\n      }\n    } else if (!this.props.location.search) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"1000px\",\n        marginLeft: this.props.DrawerStateOpen ? \"50px\" : \"120px\",\n        marginTop: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      style: {\n        margin: '10px',\n        color: 'currentColor',\n        textDecoration: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }\n    }, \"Search for the term \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 38\n      }\n    }, this.props.location.search.split('=')[1]), \" : \", this.props.searchdata.ysearchdata ? this.props.searchdata.ysearchdata.length : \"\", \"  result found\"), /*#__PURE__*/React.createElement(Divider, {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(InfiniteScrolls, {\n      value: this.props.searchdata.ysearchdata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  searchdata: state.youtube\n});\n\nexport default connect(mapStateToProps, {\n  searchData\n})(withRouter(List));","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/List.js"],"names":["React","useState","useEffect","Component","CardContent","CardMedia","Moment","Skeleton","NumericLabel","connect","PropTypes","makeStyles","Typography","Row","Col","Redirect","searchData","LinesEllipsis","withRouter","CircularProgress","Grid","Container","Divider","TextTruncate","InfiniteScrolls","option","List","constructor","props","state","items","Array","from","length","hasMore","fetchMoreData","setState","setTimeout","concat","componentDidMount","str","location","search","split","console","log","history","push","render","width","marginLeft","DrawerStateOpen","marginTop","margin","color","textDecoration","searchdata","ysearchdata","mapStateToProps","youtube"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NumericLabel from 'react-pretty-numbers'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport {Row, Col} from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { searchData } from '../../store/actions/youtube';\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport {withRouter} from 'react-router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { Container, Divider } from '@material-ui/core';\nimport TextTruncate from 'react-text-truncate'; // recommend\nimport InfiniteScrolls from \"./Component/InfiniteScrolls\";\n\nconst option = {\n    'justification': 'L',\n    'locales': 'en-US',\n    'currency':false,\n    'percentage': false,\n    'wholenumber':'ceil',\n    'commafy': true,\n    'cssClass': ['red'],\n    'shortFormat': true,\n    'shortFormatMinValue': 10000,\n    'title': true\n    };\n\n\n\n\nexport class List extends Component {\n\n    constructor(props){\n        super(props);\n    }\n    state = {\n        items: Array.from({ length: 20 }),\n        hasMore: true\n      };\n      fetchMoreData = () => {\n        if (this.state.items.length >= 500) {\n          this.setState({ hasMore: false });\n          return;\n        }\n        // a fake async api call like which sends\n        // 20 more records in .5 secs\n        setTimeout(() => {\n          this.setState({\n            items: this.state.items.concat(Array.from({ length: 20 }))\n          });\n        }, 500);\n      };\n    componentDidMount(){\n        let str = this.props.location.search\n        if(this.props.location.search){\n            if(str.split('=')[1]){\n                console.log(\"hey louji\")\n                this.props.searchData(str.split('=')[1])  \n            } else{\n                this.props.history.push(\"/\");\n            } \n        }\n        else if(!this.props.location.search){\n            this.props.history.push(\"/\");\n        }\n    }\n\n    render() {\n\n        return (\n         <div style={{ width:\"1000px\", marginLeft: this.props.DrawerStateOpen?\"50px\":\"120px\",marginTop: '50px' }}>\n             <Typography variant=\"body1\" style={{ margin: '10px', color: 'currentColor', textDecoration: '' }}>\n                 Search for the term <a href=\"#\">{this.props.location.search.split('=')[1]}</a> : {this.props.searchdata.ysearchdata ? this.props.searchdata.ysearchdata.length:\"\"}  result found\n             </Typography>\n             <Divider style={{  }}/>\n\n                <InfiniteScrolls value={this.props.searchdata.ysearchdata}/>\n         </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    searchdata: state.youtube\n  });\n\nexport default connect(mapStateToProps,{searchData})(withRouter(List));\n"]},"metadata":{},"sourceType":"module"}