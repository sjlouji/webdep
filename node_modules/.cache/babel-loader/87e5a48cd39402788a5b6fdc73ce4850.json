{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/List.js\";\nimport React, { Component } from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NumericLabel from 'react-pretty-numbers';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Row, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { searchData } from '../../store/actions/youtube';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport { withRouter } from 'react-router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nconst option = {\n  'justification': 'L',\n  'locales': 'en-US',\n  'currency': false,\n  'percentage': false,\n  'wholenumber': 'ceil',\n  'commafy': true,\n  'cssClass': ['red'],\n  'shortFormat': true,\n  'shortFormatMinValue': 10000,\n  'title': true\n};\nexport class List extends Component {\n  componentDidMount() {\n    let str = this.props.location.search;\n\n    if (this.props.location.search) {\n      if (str.split('=')[1]) {\n        console.log(\"hey louji\");\n        this.props.searchData(str.split('=')[1]);\n      } else {\n        this.props.history.push(\"/\");\n      }\n    } else if (!this.props.location.search) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  fetchData() {\n    setTimeout(() => {\n      this.setState({\n        items: this.props.searchdata.ysearchdata.concat(Array.from({\n          length: 20\n        }))\n      });\n    }, 1500);\n  }\n\n  render() {\n    console.log(this.props.searchdata.ysearchdata.length);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 22\n      }\n    }, \"No videos\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  searchdata: state.youtube\n});\n\nexport default connect(mapStateToProps, {\n  searchData\n})(withRouter(List));","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/SearchListPage/List.js"],"names":["React","Component","CardContent","CardMedia","Moment","Skeleton","NumericLabel","connect","PropTypes","makeStyles","Typography","Row","Col","Redirect","searchData","LinesEllipsis","withRouter","CircularProgress","InfiniteScroll","option","List","componentDidMount","str","props","location","search","split","console","log","history","push","fetchData","setTimeout","setState","items","searchdata","ysearchdata","concat","Array","from","length","render","mapStateToProps","state","youtube"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAGA,MAAMC,MAAM,GAAG;AACX,mBAAiB,GADN;AAEX,aAAW,OAFA;AAGX,cAAW,KAHA;AAIX,gBAAc,KAJH;AAKX,iBAAc,MALH;AAMX,aAAW,IANA;AAOX,cAAY,CAAC,KAAD,CAPD;AAQX,iBAAe,IARJ;AASX,yBAAuB,KATZ;AAUX,WAAS;AAVE,CAAf;AAcA,OAAO,MAAMC,IAAN,SAAmBnB,SAAnB,CAA6B;AAChCoB,EAAAA,iBAAiB,GAAE;AACf,QAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAA9B;;AACA,QAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,MAAvB,EAA8B;AAC1B,UAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAH,EAAqB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAKL,KAAL,CAAWT,UAAX,CAAsBQ,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAtB;AACH,OAHD,MAGM;AACF,aAAKH,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ,KAPD,MAQK,IAAG,CAAC,KAAKP,KAAL,CAAWC,QAAX,CAAoBC,MAAxB,EAA+B;AAChC,WAAKF,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;AACJ;;AAEDC,EAAAA,SAAS,GAAE;AACPC,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,UAAX,CAAsBC,WAAtB,CAAkCC,MAAlC,CAAyCC,KAAK,CAACC,IAAN,CAAW;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAX,CAAzC;AADK,OAAd;AAGD,KAJO,EAIL,IAJK,CAAV;AAKH;;AACDC,EAAAA,MAAM,GAAG;AACTd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWY,UAAX,CAAsBC,WAAtB,CAAkCI,MAA9C;AACI,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA4ES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5ET,CADJ;AAkFH;;AA3G+B;;AA8GpC,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCR,EAAAA,UAAU,EAAEQ,KAAK,CAACC;AADc,CAAZ,CAAxB;;AAIA,eAAerC,OAAO,CAACmC,eAAD,EAAiB;AAAC5B,EAAAA;AAAD,CAAjB,CAAP,CAAsCE,UAAU,CAACI,IAAD,CAAhD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport NumericLabel from 'react-pretty-numbers'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport {Row, Col} from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { searchData } from '../../store/actions/youtube';\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport {withRouter} from 'react-router';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\n\nconst option = {\n    'justification': 'L',\n    'locales': 'en-US',\n    'currency':false,\n    'percentage': false,\n    'wholenumber':'ceil',\n    'commafy': true,\n    'cssClass': ['red'],\n    'shortFormat': true,\n    'shortFormatMinValue': 10000,\n    'title': true\n    };\n  \n\nexport class List extends Component {\n    componentDidMount(){\n        let str = this.props.location.search\n        if(this.props.location.search){\n            if(str.split('=')[1]){\n                console.log(\"hey louji\")\n                this.props.searchData(str.split('=')[1])  \n            } else{\n                this.props.history.push(\"/\");\n            } \n        }\n        else if(!this.props.location.search){\n            this.props.history.push(\"/\");\n        }\n    }\n\n    fetchData(){\n        setTimeout(() => {\n            this.setState({\n              items: this.props.searchdata.ysearchdata.concat(Array.from({ length: 20 }))\n            });\n          }, 1500);\n    }\n    render() {\n    console.log(this.props.searchdata.ysearchdata.length)\n        return (\n            <div className=\"container\">\n\n                     {/* <InfiniteScroll\n                            dataLength={this.props.searchdata.ysearchdata.length} //This is important field to render the next data\n                            next={this.fetchData}\n                            hasMore={true}\n                            loader={<h4>Loading...</h4>}\n                            endMessage={\n                                <p style={{textAlign: 'center'}}>\n                                <b>Yay! You have seen it all</b>\n                                </p>\n                            }\n                            // below props only if you need pull down functionality\n                            refreshFunction={this.refresh}\n                            pullDownToRefresh\n                            pullDownToRefreshContent={\n                                <h3 style={{textAlign: 'center'}}>&#8595; Pull down to refresh</h3>\n                            }\n                            releaseToRefreshContent={\n                                <h3 style={{textAlign: 'center'}}>&#8593; Release to refresh</h3>\n                            }>\n                                    {this.props.searchdata.ysearchdata ? this.props.searchdata.ysearchdata\n                                        .map((data)=>(\n                                            <Row xs={12} style={{ cursor: 'pointer' }} onClick={e => this.props.history.push(`/watch?v=${data.videoId}`)}>\n                                                <Col xs={3}>\n                                                    <div style={{ width: '260px', height: '200px' }}>\n                                                        <CardMedia\n                                                        component=\"img\"\n                                                        alt=\"Contemplative Reptile\"\n                                                        height=\"140\"\n                                                        image={data.thumbnailsHight}\n                                                        title=\"Contemplative Reptile\"\n                                                        />\n                                                    </div>\n                                                </Col>\n                                                <Col xs={9}>\n                                                    <CardContent  style={{ padding: '0' }}>\n                                                        <Typography gutterBottom variant=\"h6\" component=\"h5\">\n                                                            {data.title}\n                                                        </Typography>\n                                                        <LinesEllipsis\n                                                        text={data.description}\n                                                        maxLine='4'\n                                                        ellipsis='......'\n                                                        trimRight\n                                                        basedOn='letters'\n                                                        />\n                                                        <Row>\n                                                    <Col style={{ marginTop: '20px' }}>\n                                                        <Row xs={3}>\n                                                        <Col xs={1}>\n                                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                                <NumericLabel params={option}>{data.viewCount}</NumericLabel> \n                                                            </Typography>\n                                                        </Col>\n                                                        <Col xs={2}>\n                                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                                views\n                                                            </Typography>\n                                                        </Col>\n                                                        </Row>\n\n                                                    </Col>\n                                                    <Col  style={{ marginTop: '20px' }}>\n                                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                        Published  <Moment fromNow>{data.publishedAt}</Moment>\n                                                    </Typography>\n                                                    </Col>\n                                                    </Row>\n                                                    </CardContent>                   \n                                                </Col>\n                                            </Row>\n                                        )):\n                                        <CircularProgress />\n                                }\n                    </InfiniteScroll> */}\n                     <h1>\n                         No videos \n                     </h1>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    searchdata: state.youtube\n  });\n\nexport default connect(mapStateToProps,{searchData})(withRouter(List));\n"]},"metadata":{},"sourceType":"module"}