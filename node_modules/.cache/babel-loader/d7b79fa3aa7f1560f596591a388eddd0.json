{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Watch/Payement/Payement.js\";\nimport { CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\n\nclass CheckoutForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = async event => {\n      // Block native form submission.\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n\n      if (!stripe || !elements) {\n        // Stripe.js has not loaded yet. Make sure to disable\n        // form submission until Stripe.js has loaded.\n        return;\n      } // Get a reference to a mounted CardElement. Elements knows how\n      // to find your CardElement because there can only ever be one of\n      // each type of element.\n\n\n      const cardElement = elements.getElement(CardElement);\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement\n      });\n\n      if (error) {\n        console.log('[error]', error);\n      } else {\n        console.log('[PaymentMethod]', paymentMethod);\n      }\n    };\n  }\n\n  render() {\n    const {\n      stripe\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Pay\"));\n  }\n\n}\n\nconst InjectedCheckoutForm = () => {\n  return /*#__PURE__*/React.createElement(ElementsConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, ({\n    elements,\n    stripe\n  }) => /*#__PURE__*/React.createElement(CheckoutForm, {\n    elements: elements,\n    stripe: stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Watch/Payement/Payement.js"],"names":["CardElement","ElementsConsumer","CheckoutForm","React","Component","handleSubmit","event","preventDefault","stripe","elements","props","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","render","InjectedCheckoutForm"],"mappings":";AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,yBAA5C;;AAEA,MAAMC,YAAN,SAA2BC,KAAK,CAACC,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,YADyC,GAC1B,MAAOC,KAAP,IAAiB;AAC9B;AACAA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAqB,KAAKC,KAAhC;;AAEA,UAAI,CAACF,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,OAV6B,CAY9B;AACA;AACA;;;AACA,YAAME,WAAW,GAAGF,QAAQ,CAACG,UAAT,CAAoBZ,WAApB,CAApB;AAEA,YAAM;AAACa,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAyB,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAC9DC,QAAAA,IAAI,EAAE,MADwD;AAE9DC,QAAAA,IAAI,EAAEN;AAFwD,OAA3B,CAArC;;AAKA,UAAIE,KAAJ,EAAW;AACTK,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,OAFD,MAEO;AACLK,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,KA5BwC;AAAA;;AA8BzCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAACZ,MAAAA;AAAD,QAAW,KAAKE,KAAtB;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACG,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAQD;;AAxCwC;;AA2C3C,MAAMa,oBAAoB,GAAG,MAAM;AACjC,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAACZ,IAAAA,QAAD;AAAWD,IAAAA;AAAX,GAAD,kBACC,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEC,QAAxB;AAAkC,IAAA,MAAM,EAAED,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAOD,CARD","sourcesContent":["import {CardElement, ElementsConsumer} from '@stripe/react-stripe-js';\n\nclass CheckoutForm extends React.Component {\n  handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n\n    const {stripe, elements} = this.props;\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  render() {\n    const {stripe} = this.props;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <CardElement />\n        <button type=\"submit\" disabled={!stripe}>\n          Pay\n        </button>\n      </form>\n    );\n  }\n}\n\nconst InjectedCheckoutForm = () => {\n  return (\n    <ElementsConsumer>\n      {({elements, stripe}) => (\n        <CheckoutForm elements={elements} stripe={stripe} />\n      )}\n    </ElementsConsumer>\n  );\n};"]},"metadata":{},"sourceType":"module"}