{"ast":null,"code":"import axios from'axios';import{BLOGLOADED,BLOGLOADING,BLOGSEARCH}from'./types';export var loadBlog=function loadBlog(){return function(dispatch,getState){dispatch({type:BLOGLOADING});axios.get('http://localhost:8000/blog/api').then(function(res){dispatch({type:BLOGLOADED,payload:res.data});}).catch(function(err){console.log(err);});};};// export const searchData = (query) => (dispatch, getState) => {\n//   dispatch({ type: YDATASEARCH });\n//   axios\n//     .get(`http://localhost:8000/youtube/api/find?search=${query}`)\n//     .then((res) => {\n//       dispatch({\n//         type: YDATASEARCH,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => {\n//       console.log(err)\n//     }); \n// };","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/store/actions/blog.js"],"names":["axios","BLOGLOADED","BLOGLOADING","BLOGSEARCH","loadBlog","dispatch","getState","type","get","then","res","payload","data","catch","err","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,UADF,CAEEC,WAFF,CAGEC,UAHF,KAIO,SAJP,CAQA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAM,UAACC,QAAD,CAAWC,QAAX,CAAwB,CACpDD,QAAQ,CAAC,CAAEE,IAAI,CAAEL,WAAR,CAAD,CAAR,CACAF,KAAK,CACFQ,GADH,CACO,gCADP,EAEGC,IAFH,CAEQ,SAACC,GAAD,CAAS,CACbL,QAAQ,CAAC,CACPE,IAAI,CAAEN,UADC,CAEPU,OAAO,CAAED,GAAG,CAACE,IAFN,CAAD,CAAR,CAID,CAPH,EAQGC,KARH,CAQS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAVH,EAWD,CAbuB,EAAjB,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\nimport {\n  BLOGLOADED,\n  BLOGLOADING,\n  BLOGSEARCH,\n} from './types';\n\n\n\nexport const loadBlog = () => (dispatch, getState) => {\n  dispatch({ type: BLOGLOADING });\n  axios\n    .get('http://localhost:8000/blog/api')\n    .then((res) => {\n      dispatch({\n        type: BLOGLOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(err)\n    }); \n};\n\n// export const searchData = (query) => (dispatch, getState) => {\n//   dispatch({ type: YDATASEARCH });\n//   axios\n//     .get(`http://localhost:8000/youtube/api/find?search=${query}`)\n//     .then((res) => {\n//       dispatch({\n//         type: YDATASEARCH,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => {\n//       console.log(err)\n//     }); \n// };\n\n"]},"metadata":{},"sourceType":"module"}