{"ast":null,"code":"import axios from'axios';import{USER_LOADED,USER_LOADING,LOGIN_SUCCESS,LOGOUT_SUCCESS,REGISTER_SUCCESS,AUTH_ERROR}from'./types';export var loadUser=function loadUser(){return function(dispatch,getState){dispatch({type:USER_LOADING});axios.get('http://localhost:8000/api/auth/user',tokenConfig(getState)).then(function(res){dispatch({type:USER_LOADED,payload:res.data});console.log(res.data);}).catch(function(err){console.log(err);});};};// LOGIN USER\nexport var login=function login(email,password){return function(dispatch){var config={headers:{'Content-Type':'application/json'}};// Request Body\nvar body=JSON.stringify({email:email,password:password});axios.post('http://localhost:8000/api/auth/login',body,config).then(function(res){dispatch({type:LOGIN_SUCCESS,payload:res.data});console.log(res.data);}).catch(function(err){dispatch({type:AUTH_ERROR,payload:err.response.data});});};};// REGISTER USER\nexport var register=function register(_ref){var first_name=_ref.first_name,last_name=_ref.last_name,password=_ref.password,email=_ref.email;return function(dispatch){// Headers\nvar config={headers:{'Content-Type':'application/json'}};// Request Body\nvar body=JSON.stringify({first_name:first_name,last_name:last_name,email:email,password:password});axios.post('http://localhost:8000/api/auth/register',body,config).then(function(res){dispatch({type:REGISTER_SUCCESS,payload:res.data});}).catch(function(err){});};};// LOGOUT USER\nexport var logout=function logout(){return function(dispatch,getState){axios.post('http://localhost:8000/api/auth/logout/',null,tokenConfig(getState)).then(function(res){dispatch({type:LOGOUT_SUCCESS});}).catch(function(err){console.log(err.response.data);});};};// Setup config with token - helper function\nexport var tokenConfig=function tokenConfig(getState){var token=getState().auth.token;var config={headers:{'Content-Type':'application/json'}};if(token){config.headers['Authorization']=\"Token \".concat(token);}return config;};","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/store/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","LOGIN_SUCCESS","LOGOUT_SUCCESS","REGISTER_SUCCESS","AUTH_ERROR","loadUser","dispatch","getState","type","get","tokenConfig","then","res","payload","data","console","log","catch","err","login","email","password","config","headers","body","JSON","stringify","post","response","register","first_name","last_name","logout","token","auth"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  AUTH_ERROR,\n} from './types';\n\n\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n  axios\n    .get('http://localhost:8000/api/auth/user', tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n      console.log(res.data)\n    })\n    .catch((err) => {\n      console.log(err)\n    }); \n};\n\n// LOGIN USER\nexport const login = (email, password) => (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // Request Body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post('http://localhost:8000/api/auth/login', body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      console.log(res.data)\n    })\n    .catch((err) => {\n      dispatch({ \n        type: AUTH_ERROR,\n        payload: err.response.data,\n      })\n    });\n};\n\n// REGISTER USER\nexport const register = ({ first_name,last_name, password, email }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ first_name,last_name, email, password });\n\n  axios\n    .post('http://localhost:8000/api/auth/register', body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post('http://localhost:8000/api/auth/logout/', null, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    })\n    .catch((err) => {\n        console.log(err.response.data)\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n};"]},"metadata":{},"sourceType":"module"}