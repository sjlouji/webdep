{"ast":null,"code":"import{createAction,createRequestTypes,FAILURE,REQUEST,SUCCESS}from'./index';export var SEARCH_FOR_VIDEOS=createRequestTypes('SEARCH_FOR_VIDEOS');export var forVideos={request:function request(searchQuery,nextPageToken,amount){return createAction(SEARCH_FOR_VIDEOS[REQUEST],{searchQuery:searchQuery,nextPageToken:nextPageToken,amount:amount});},success:function success(response,searchQuery){return createAction(SEARCH_FOR_VIDEOS[SUCCESS],{response:response,searchQuery:searchQuery});},failure:function failure(response,searchQuery){return createAction(SEARCH_FOR_VIDEOS[FAILURE],{response:response,searchQuery:searchQuery});}};","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/store/actions/search.js"],"names":["createAction","createRequestTypes","FAILURE","REQUEST","SUCCESS","SEARCH_FOR_VIDEOS","forVideos","request","searchQuery","nextPageToken","amount","success","response","failure"],"mappings":"AAAA,OAAQA,YAAR,CAAsBC,kBAAtB,CAA0CC,OAA1C,CAAmDC,OAAnD,CAA4DC,OAA5D,KAA0E,SAA1E,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGJ,kBAAkB,CAAC,mBAAD,CAA5C,CACP,MAAO,IAAMK,CAAAA,SAAS,CAAG,CACvBC,OAAO,CAAE,iBAACC,WAAD,CAAcC,aAAd,CAA6BC,MAA7B,QAAwCV,CAAAA,YAAY,CAACK,iBAAiB,CAACF,OAAD,CAAlB,CAA6B,CAACK,WAAW,CAAXA,WAAD,CAAcC,aAAa,CAAbA,aAAd,CAA6BC,MAAM,CAANA,MAA7B,CAA7B,CAApD,EADc,CAEvBC,OAAO,CAAE,iBAACC,QAAD,CAAWJ,WAAX,QAA2BR,CAAAA,YAAY,CAACK,iBAAiB,CAACD,OAAD,CAAlB,CAA6B,CAACQ,QAAQ,CAARA,QAAD,CAAWJ,WAAW,CAAXA,WAAX,CAA7B,CAAvC,EAFc,CAGvBK,OAAO,CAAE,iBAACD,QAAD,CAAWJ,WAAX,QAA2BR,CAAAA,YAAY,CAACK,iBAAiB,CAACH,OAAD,CAAlB,CAA8B,CAACU,QAAQ,CAARA,QAAD,CAAWJ,WAAW,CAAXA,WAAX,CAA9B,CAAvC,EAHc,CAAlB","sourcesContent":["import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\n\nexport const SEARCH_FOR_VIDEOS = createRequestTypes('SEARCH_FOR_VIDEOS');\nexport const forVideos = {\n  request: (searchQuery, nextPageToken, amount) => createAction(SEARCH_FOR_VIDEOS[REQUEST], {searchQuery, nextPageToken, amount}),\n  success: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[SUCCESS], {response, searchQuery}),\n  failure: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[FAILURE],  {response, searchQuery}),\n};"]},"metadata":{},"sourceType":"module"}