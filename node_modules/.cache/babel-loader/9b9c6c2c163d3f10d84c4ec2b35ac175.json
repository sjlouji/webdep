{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Calender/Calender.js\";\nimport React from 'react';\nimport { EventCalendar, eventTypes } from '@jfschmiechen/react-event-calendar'; // Event source (array of event objects)\n\nimport events from './lib/resources/events-json';\nlet parsedEvents = []; // Create shim so that the calendar can get the correct data from each event.\n// In this example, I am using events from a google calendar.\n\nevents.items.map(event => {\n  let tempObject = {};\n  tempObject.start = event.start.dateTime ? event.start.dateTime : event.start.date;\n  tempObject.end = event.end.dateTime ? event.end.dateTime : event.end.date;\n  tempObject.text = event.summary;\n  parsedEvents.push(tempObject);\n}); // These colors allow customization to the theme.\n// default colors are slateblue and lightslategray.\n\nlet colors = {\n  primaryColor: 'slateblue',\n  secondaryColor: 'lightslategray'\n}; // The config contains all settings for the event calendar.\n// See the API table to see all possible values.\n\nlet config = {\n  colors,\n  onEventClick: (e, event, eventArray) => console.log(event.type === eventTypes.SINGLE_DAY_TYPE),\n  onTileClick: (e, eventArray) => console.log(eventArray),\n  onPlusMoreClick: (e, eventArray) => console.log(eventArray)\n};\nexport default class Calender extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(EventCalendar, {\n      items: parsedEvents,\n      month: 5,\n      year: 2019,\n      config: config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Calender/Calender.js"],"names":["React","EventCalendar","eventTypes","events","parsedEvents","items","map","event","tempObject","start","dateTime","date","end","text","summary","push","colors","primaryColor","secondaryColor","config","onEventClick","e","eventArray","console","log","type","SINGLE_DAY_TYPE","onTileClick","onPlusMoreClick","Calender","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,oCAA1C,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,IAAIC,YAAY,GAAG,EAAnB,C,CACA;AACA;;AACAD,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACtB,MAAIC,UAAU,GAAG,EAAjB;AAEAA,EAAAA,UAAU,CAACC,KAAX,GAAmBF,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBH,KAAK,CAACE,KAAN,CAAYC,QAAnC,GAA8CH,KAAK,CAACE,KAAN,CAAYE,IAA7E;AACAH,EAAAA,UAAU,CAACI,GAAX,GAAiBL,KAAK,CAACK,GAAN,CAAUF,QAAV,GAAqBH,KAAK,CAACK,GAAN,CAAUF,QAA/B,GAA0CH,KAAK,CAACK,GAAN,CAAUD,IAArE;AACAH,EAAAA,UAAU,CAACK,IAAX,GAAkBN,KAAK,CAACO,OAAxB;AAEAV,EAAAA,YAAY,CAACW,IAAb,CAAkBP,UAAlB;AACH,CARD,E,CAUA;AACA;;AACA,IAAIQ,MAAM,GAAG;AACTC,EAAAA,YAAY,EAAE,WADL;AAETC,EAAAA,cAAc,EAAE;AAFP,CAAb,C,CAKA;AACA;;AACA,IAAIC,MAAM,GAAG;AACTH,EAAAA,MADS;AAETI,EAAAA,YAAY,EAAE,CAACC,CAAD,EAAId,KAAJ,EAAWe,UAAX,KAA0BC,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,IAAN,KAAevB,UAAU,CAACwB,eAAtC,CAF/B;AAGTC,EAAAA,WAAW,EAAE,CAACN,CAAD,EAAIC,UAAJ,KAAmBC,OAAO,CAACC,GAAR,CAAYF,UAAZ,CAHvB;AAITM,EAAAA,eAAe,EAAE,CAACP,CAAD,EAAIC,UAAJ,KAAmBC,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAJ3B,CAAb;AAQA,eAAe,MAAMO,QAAN,SAAuB7B,KAAK,CAAC8B,SAA7B,CAAuC;AAClDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE3B,YAAtB;AAAoC,MAAA,KAAK,EAAE,CAA3C;AAA8C,MAAA,IAAI,EAAE,IAApD;AAA0D,MAAA,MAAM,EAAEe,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CADJ;AAKH;;AAPiD","sourcesContent":["import React from 'react';\nimport { EventCalendar, eventTypes } from '@jfschmiechen/react-event-calendar';\n\n// Event source (array of event objects)\nimport events from './lib/resources/events-json';\n\nlet parsedEvents = [];\n// Create shim so that the calendar can get the correct data from each event.\n// In this example, I am using events from a google calendar.\nevents.items.map(event => {\n    let tempObject = {};\n\n    tempObject.start = event.start.dateTime ? event.start.dateTime : event.start.date;\n    tempObject.end = event.end.dateTime ? event.end.dateTime : event.end.date;\n    tempObject.text = event.summary;\n\n    parsedEvents.push(tempObject);\n});\n\n// These colors allow customization to the theme.\n// default colors are slateblue and lightslategray.\nlet colors = {\n    primaryColor: 'slateblue',\n    secondaryColor: 'lightslategray'\n};\n\n// The config contains all settings for the event calendar.\n// See the API table to see all possible values.\nlet config = {\n    colors,\n    onEventClick: (e, event, eventArray) => console.log(event.type === eventTypes.SINGLE_DAY_TYPE),\n    onTileClick: (e, eventArray) => console.log(eventArray),\n    onPlusMoreClick: (e, eventArray) => console.log(eventArray)\n};\n\n\nexport default class Calender extends React.Component {\n    render() {\n        return (\n            <div>\n                    <EventCalendar items={parsedEvents} month={5} year={2019} config={config} />\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}