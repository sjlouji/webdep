{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/components/SideBar/SideBarItem/SideBarItem.js\";\nimport React from 'react';\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport './SideBarItem.scss';\nimport { Link, withRouter } from 'react-router-dom';\nexport class SideBarItem extends React.Component {\n  render() {\n    // React will ignore custom boolean attributes, therefore we pass a string\n    // we use this attribute in our SCSS for styling\n    const highlight = this.shouldBeHighlighted() ? 'highlight-item' : null;\n    return /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: this.props.path\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      className: ['sidebar-item', highlight].join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-item-alignment-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: \"large\",\n      name: this.props.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 19\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, this.props.label))));\n  }\n\n  shouldBeHighlighted() {\n    const {\n      pathname\n    } = this.props.location;\n\n    if (this.props.path === '/') {\n      return pathname === this.props.path;\n    }\n\n    return pathname.includes(this.props.path);\n  }\n\n}\nexport default withRouter(SideBarItem);","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/components/SideBar/SideBarItem/SideBarItem.js"],"names":["React","Icon","Menu","Link","withRouter","SideBarItem","Component","render","highlight","shouldBeHighlighted","pathname","props","path","join","icon","label","location","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,mBAAzB;AACA,OAAO,oBAAP;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAC/CC,EAAAA,MAAM,GAAG;AACP;AACA;AACA,UAAMC,SAAS,GAAG,KAAKC,mBAAL,KAA6B,gBAA7B,GAAgD,IAAlE;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC;AAAtB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAE,CAAC,cAAD,EAAiBJ,SAAjB,EAA4BK,IAA5B,CAAiC,GAAjC,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKH,KAAL,CAAWI,KAAlB,CAFF,CADF,CADF,CADF;AAUD;;AAEDN,EAAAA,mBAAmB,GAAG;AACpB,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKC,KAAL,CAAWK,QAA9B;;AACA,QAAI,KAAKL,KAAL,CAAWC,IAAX,KAAoB,GAAxB,EAA6B;AAC3B,aAAOF,QAAQ,KAAK,KAAKC,KAAL,CAAWC,IAA/B;AACD;;AACD,WAAOF,QAAQ,CAACO,QAAT,CAAkB,KAAKN,KAAL,CAAWC,IAA7B,CAAP;AACD;;AAvB8C;AA0BjD,eAAeR,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {Icon, Menu} from \"semantic-ui-react\";\nimport './SideBarItem.scss';\nimport {Link, withRouter} from 'react-router-dom';\n\nexport class SideBarItem extends React.Component {\n  render() {\n    // React will ignore custom boolean attributes, therefore we pass a string\n    // we use this attribute in our SCSS for styling\n    const highlight = this.shouldBeHighlighted() ? 'highlight-item' : null;\n    return (\n      <Link to={{pathname: this.props.path}}>\n        <Menu.Item className={['sidebar-item', highlight].join(' ')}>\n          <div className='sidebar-item-alignment-container'>\n            <span><Icon size='large' name={this.props.icon}/> </span>\n            <span>{this.props.label}</span>\n          </div>\n        </Menu.Item>\n      </Link>\n    );\n  }\n\n  shouldBeHighlighted() {\n    const {pathname} = this.props.location;\n    if (this.props.path === '/') {\n      return pathname === this.props.path;\n    }\n    return pathname.includes(this.props.path);\n  }\n}\n\nexport default withRouter(SideBarItem);"]},"metadata":{},"sourceType":"module"}