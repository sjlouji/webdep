{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Blog/View/View.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { loadBlog } from '../../../store/actions/blog';\n\nfunction MyApp(props) {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleClick = () => {\n    enqueueSnackbar(props.value.message);\n  };\n\n  const handleClickVariant = variant => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar('This is a success message!', {\n      variant\n    });\n  };\n\n  console.log(props.value.message);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n}\n\nexport class View extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SnackbarProvider, {\n      maxSnack: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MyApp, {\n      value: this.props.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  error: state.auth.error\n});\n\nexport default connect(mapStateToProps, {\n  loadBlog\n})(View);","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/Blog/View/View.js"],"names":["React","Button","SnackbarProvider","useSnackbar","connect","loadBlog","MyApp","props","enqueueSnackbar","handleClick","value","message","handleClickVariant","variant","console","log","View","Component","render","error","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,WAA9C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,6BAAvB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAsBL,WAAW,EAAvC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBD,IAAAA,eAAe,CAACD,KAAK,CAACG,KAAN,CAAYC,OAAb,CAAf;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIC,OAAD,IAAa,MAAM;AAC5C;AACAL,IAAAA,eAAe,CAAC,4BAAD,EAA+B;AAAEK,MAAAA;AAAF,KAA/B,CAAf;AACD,GAHD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACG,KAAN,CAAYC,OAAxB;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD;;AAGD,OAAO,MAAMK,IAAN,SAAmBhB,KAAK,CAACiB,SAAzB,CAAmC;AACtCC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWY,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH;;AATqC;;AAY1C,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,KAAK,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADc,CAAZ,CAAxB;;AAMA,eAAef,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA;AAAD,CAAlB,CAAP,CAAqCW,IAArC,CAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { SnackbarProvider, useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport {loadBlog} from '../../../store/actions/blog';\n\nfunction MyApp(props) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClick = () => {\n    enqueueSnackbar(props.value.message);\n  };\n  \n  const handleClickVariant = (variant) => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar('This is a success message!', { variant });\n  };\n  console.log(props.value.message)\n  return (\n    <React.Fragment>\n        \n    </React.Fragment>\n  );\n}\n\n\nexport class View extends React.Component {\n    render(){\n        return(\n            <div>\n                <SnackbarProvider maxSnack={3}>\n                    <MyApp value={this.props.error}/>\n                </SnackbarProvider>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    error: state.auth.error\n  });\n\n\n\nexport default connect(mapStateToProps, {loadBlog})(View)\n"]},"metadata":{},"sourceType":"module"}