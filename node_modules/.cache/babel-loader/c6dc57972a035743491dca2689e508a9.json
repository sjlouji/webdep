{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOADED, USER_LOADING, LOGIN_SUCCESS, LOGOUT_SUCCESS, REGISTER_SUCCESS, AUTH_ERROR } from './types';\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({\n    type: USER_LOADING\n  });\n  axios.get('http://localhost:8000/api/auth/user', tokenConfig(getState)).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}; // LOGIN USER\n\nexport const login = (email, password) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // Request Body\n\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  axios.post('http://3.133.123.184:3000/swagger/session/login', body, config).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    console.log(res.data);\n  }).catch(err => {\n    console.log(err);\n  });\n}; // REGISTER USER\n\nexport const register = ({\n  first_name,\n  last_name,\n  password,\n  email\n}) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // Request Body\n\n  const body = JSON.stringify({\n    first_name,\n    last_name,\n    email,\n    password\n  });\n  axios.post('http://localhost:8000/api/auth/register', body, config).then(res => {\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {});\n}; // LOGOUT USER\n\nexport const logout = () => (dispatch, getState) => {\n  console.log(\"Clicked\");\n  axios.post('http://localhost:8000/api/auth/logout/', null, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n    console.log(\"logout Success\");\n  }).catch(err => {\n    console.log(err.response.data);\n  });\n}; // Setup config with token - helper function\n\nexport const tokenConfig = getState => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/store/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","LOGIN_SUCCESS","LOGOUT_SUCCESS","REGISTER_SUCCESS","AUTH_ERROR","loadUser","dispatch","getState","type","get","tokenConfig","then","res","payload","data","console","log","catch","err","login","email","password","config","headers","body","JSON","stringify","post","register","first_name","last_name","logout","response","token","auth"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  AUTH_ERROR,\n} from './types';\n\n\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n  axios\n    .get('http://localhost:8000/api/auth/user', tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n      console.log(res.data)\n    })\n    .catch((err) => {\n      console.log(err)\n    }); \n};\n\n// LOGIN USER\nexport const login = (email, password) => (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // Request Body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post('http://3.133.123.184:3000/swagger/session/login', body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      console.log(res.data)\n    })\n    .catch((err) => {\n      console.log(err)\n    });\n};\n\n// REGISTER USER\nexport const register = ({ first_name,last_name, password, email }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ first_name,last_name, email, password });\n\n  axios\n    .post('http://localhost:8000/api/auth/register', body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  console.log(\"Clicked\")\n  axios\n    .post('http://localhost:8000/api/auth/logout/', null, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n      console.log(\"logout Success\")\n    })\n    .catch((err) => {\n        console.log(err.response.data)\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n};"]},"metadata":{},"sourceType":"module"}