{"ast":null,"code":"import _regeneratorRuntime from\"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchMostPopularVideosByCategory),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchMostPopularVideos),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchMostPopularVideos),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchVideoCategories),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(watchMostPopularVideosByCategory);import{fork,take,takeEvery,call,all,put}from'redux-saga/effects';import*as api from'../api/youtube-api';import*as videoActions from'../actions/video';import{REQUEST}from'../actions';import{fetchEntity,ignoreErrors}from'./index';export var fetchVideoCategories=fetchEntity.bind(null,api.buildVideoCategoriesRequest,videoActions.categories);export function fetchMostPopularVideosByCategory(categories){var requests,response;return _regeneratorRuntime.wrap(function fetchMostPopularVideosByCategory$(_context){while(1){switch(_context.prev=_context.next){case 0:requests=categories.map(function(categoryId){var wrapper=ignoreErrors(api.buildMostPopularVideosRequest,12,false,null,categoryId);return call(wrapper);});_context.prev=1;_context.next=4;return all(requests);case 4:response=_context.sent;_context.next=7;return put(videoActions.mostPopularByCategory.success(response,categories));case 7:_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);_context.next=13;return put(videoActions.mostPopularByCategory.failure(_context.t0));case 13:case\"end\":return _context.stop();}}},_marked,null,[[1,9]]);}export function fetchMostPopularVideos(amount,loadDescription,nextPageToken){var request;return _regeneratorRuntime.wrap(function fetchMostPopularVideos$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:request=api.buildMostPopularVideosRequest.bind(null,amount,loadDescription,nextPageToken);_context2.next=3;return fetchEntity(request,videoActions.mostPopular);case 3:case\"end\":return _context2.stop();}}},_marked2);}/******************************************************************************/ /******************************* WATCHERS *************************************/ /******************************************************************************/export function watchMostPopularVideos(){var _yield$take,amount,loadDescription,nextPageToken;return _regeneratorRuntime.wrap(function watchMostPopularVideos$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!true){_context3.next=11;break;}_context3.next=3;return take(videoActions.MOST_POPULAR[REQUEST]);case 3:_yield$take=_context3.sent;amount=_yield$take.amount;loadDescription=_yield$take.loadDescription;nextPageToken=_yield$take.nextPageToken;_context3.next=9;return fork(fetchMostPopularVideos,amount,loadDescription,nextPageToken);case 9:_context3.next=0;break;case 11:case\"end\":return _context3.stop();}}},_marked3);}export function watchVideoCategories(){return _regeneratorRuntime.wrap(function watchVideoCategories$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return takeEvery(videoActions.VIDEO_CATEGORIES[REQUEST],fetchVideoCategories);case 2:case\"end\":return _context4.stop();}}},_marked4);}export function watchMostPopularVideosByCategory(){var _yield$take2,categories;return _regeneratorRuntime.wrap(function watchMostPopularVideosByCategory$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!true){_context5.next=9;break;}_context5.next=3;return take(videoActions.MOST_POPULAR_BY_CATEGORY[REQUEST]);case 3:_yield$take2=_context5.sent;categories=_yield$take2.categories;_context5.next=7;return fork(fetchMostPopularVideosByCategory,categories);case 7:_context5.next=0;break;case 9:case\"end\":return _context5.stop();}}},_marked5);}","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/store/sagas/video.js"],"names":["fetchMostPopularVideosByCategory","fetchMostPopularVideos","watchMostPopularVideos","watchVideoCategories","watchMostPopularVideosByCategory","fork","take","takeEvery","call","all","put","api","videoActions","REQUEST","fetchEntity","ignoreErrors","fetchVideoCategories","bind","buildVideoCategoriesRequest","categories","requests","map","categoryId","wrapper","buildMostPopularVideosRequest","response","mostPopularByCategory","success","failure","amount","loadDescription","nextPageToken","request","mostPopular","MOST_POPULAR","VIDEO_CATEGORIES","MOST_POPULAR_BY_CATEGORY"],"mappings":"iOASiBA,gC,iDAaAC,sB,iDASAC,sB,iDAOAC,oB,iDAGAC,gC,EAzCjB,OAAQC,IAAR,CAAcC,IAAd,CAAoBC,SAApB,CAA+BC,IAA/B,CAAqCC,GAArC,CAA0CC,GAA1C,KAAoD,oBAApD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,oBAArB,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,kBAA9B,CACA,OAAQC,OAAR,KAAsB,YAAtB,CACA,OAAQC,WAAR,CAAqBC,YAArB,KAAwC,SAAxC,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAGF,WAAW,CAACG,IAAZ,CAAiB,IAAjB,CAAuBN,GAAG,CAACO,2BAA3B,CAAwDN,YAAY,CAACO,UAArE,CAA7B,CAGP,MAAO,SAAUnB,CAAAA,gCAAV,CAA2CmB,UAA3C,iKACCC,QADD,CACYD,UAAU,CAACE,GAAX,CAAe,SAAAC,UAAU,CAAI,CAC5C,GAAMC,CAAAA,OAAO,CAAGR,YAAY,CAACJ,GAAG,CAACa,6BAAL,CAAoC,EAApC,CAAwC,KAAxC,CAA+C,IAA/C,CAAqDF,UAArD,CAA5B,CACA,MAAOd,CAAAA,IAAI,CAACe,OAAD,CAAX,CACD,CAHgB,CADZ,iCAMc,MAAMd,CAAAA,GAAG,CAACW,QAAD,CAAT,CANd,OAMGK,QANH,+BAOH,MAAMf,CAAAA,GAAG,CAACE,YAAY,CAACc,qBAAb,CAAmCC,OAAnC,CAA2CF,QAA3C,CAAqDN,UAArD,CAAD,CAAT,CAPG,uGASH,MAAMT,CAAAA,GAAG,CAACE,YAAY,CAACc,qBAAb,CAAmCE,OAAnC,aAAD,CAAT,CATG,oEAaP,MAAO,SAAU3B,CAAAA,sBAAV,CAAiC4B,MAAjC,CAAyCC,eAAzC,CAA0DC,aAA1D,gJACCC,OADD,CACWrB,GAAG,CAACa,6BAAJ,CAAkCP,IAAlC,CAAuC,IAAvC,CAA6CY,MAA7C,CAAqDC,eAArD,CAAsEC,aAAtE,CADX,kBAEL,MAAMjB,CAAAA,WAAW,CAACkB,OAAD,CAAUpB,YAAY,CAACqB,WAAvB,CAAjB,CAFK,wDAMP,gF,CACA,gF,CACA,gFACA,MAAO,SAAU/B,CAAAA,sBAAV,8LACE,IADF,4CAE8C,MAAMI,CAAAA,IAAI,CAACM,YAAY,CAACsB,YAAb,CAA0BrB,OAA1B,CAAD,CAAV,CAF9C,kCAEIgB,MAFJ,aAEIA,MAFJ,CAEYC,eAFZ,aAEYA,eAFZ,CAE6BC,aAF7B,aAE6BA,aAF7B,kBAGH,MAAM1B,CAAAA,IAAI,CAACJ,sBAAD,CAAyB4B,MAAzB,CAAiCC,eAAjC,CAAkDC,aAAlD,CAAV,CAHG,uFAOP,MAAO,SAAU5B,CAAAA,oBAAV,oJACL,MAAMI,CAAAA,SAAS,CAACK,YAAY,CAACuB,gBAAb,CAA8BtB,OAA9B,CAAD,CAAyCG,oBAAzC,CAAf,CADK,wDAGP,MAAO,SAAUZ,CAAAA,gCAAV,+KACC,IADD,2CAEkB,MAAME,CAAAA,IAAI,CAACM,YAAY,CAACwB,wBAAb,CAAsCvB,OAAtC,CAAD,CAAV,CAFlB,mCAEIM,UAFJ,cAEIA,UAFJ,kBAGH,MAAMd,CAAAA,IAAI,CAACL,gCAAD,CAAmCmB,UAAnC,CAAV,CAHG","sourcesContent":["import {fork, take, takeEvery, call, all, put} from 'redux-saga/effects';\nimport * as api from '../api/youtube-api';\nimport * as videoActions from '../actions/video';\nimport {REQUEST} from '../actions';\nimport {fetchEntity, ignoreErrors} from './index';\n\nexport const fetchVideoCategories = fetchEntity.bind(null, api.buildVideoCategoriesRequest, videoActions.categories);\n\n\nexport function* fetchMostPopularVideosByCategory(categories) {\n  const requests = categories.map(categoryId => {\n    const wrapper = ignoreErrors(api.buildMostPopularVideosRequest, 12, false, null, categoryId);\n    return call(wrapper);\n  });\n  try {\n    const response = yield all(requests);\n    yield put(videoActions.mostPopularByCategory.success(response, categories));\n  } catch (error) {\n    yield put(videoActions.mostPopularByCategory.failure(error));\n  }\n}\n\nexport function* fetchMostPopularVideos(amount, loadDescription, nextPageToken) {\n  const request = api.buildMostPopularVideosRequest.bind(null, amount, loadDescription, nextPageToken);\n  yield fetchEntity(request, videoActions.mostPopular);\n}\n\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchMostPopularVideos() {\n  while (true) {\n    const {amount, loadDescription, nextPageToken} = yield take(videoActions.MOST_POPULAR[REQUEST]);\n    yield fork(fetchMostPopularVideos, amount, loadDescription, nextPageToken);\n  }\n}\n\nexport function* watchVideoCategories() {\n  yield takeEvery(videoActions.VIDEO_CATEGORIES[REQUEST], fetchVideoCategories);\n}\nexport function* watchMostPopularVideosByCategory() {\n  while(true) {\n    const {categories} = yield take(videoActions.MOST_POPULAR_BY_CATEGORY[REQUEST]);\n    yield fork(fetchMostPopularVideosByCategory, categories);\n  }\n}"]},"metadata":{},"sourceType":"module"}