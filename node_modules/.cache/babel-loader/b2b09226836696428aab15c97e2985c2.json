{"ast":null,"code":"import { fork, take } from 'redux-saga/effects';\nimport { REQUEST } from '../actions';\nimport * as commentActions from '../actions/comment';\nimport * as api from '../api/youtube-api';\nimport { fetchEntity } from './index';\nexport function* fetchCommentThread(videoId, nextPageToken) {\n  const request = api.buildCommentThreadRequest.bind(null, videoId, nextPageToken);\n  yield fetchEntity(request, commentActions.thread, videoId);\n}\n/******************************************************************************/\n\n/******************************* WATCHERS *************************************/\n\n/******************************************************************************/\n\nexport function* watchCommentThread() {\n  while (true) {\n    const {\n      videoId,\n      nextPageToken\n    } = yield take(commentActions.COMMENT_THREAD[REQUEST]);\n    yield fork(fetchCommentThread, videoId, nextPageToken);\n  }\n}","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/store/sagas/comment.js"],"names":["fork","take","REQUEST","commentActions","api","fetchEntity","fetchCommentThread","videoId","nextPageToken","request","buildCommentThreadRequest","bind","thread","watchCommentThread","COMMENT_THREAD"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,IAAd,QAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAO,KAAKC,cAAZ,MAAgC,oBAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AAEA,OAAO,UAAUC,kBAAV,CAA6BC,OAA7B,EAAsCC,aAAtC,EAAqD;AAC1D,QAAMC,OAAO,GAAGL,GAAG,CAACM,yBAAJ,CAA8BC,IAA9B,CAAmC,IAAnC,EAAyCJ,OAAzC,EAAkDC,aAAlD,CAAhB;AACA,QAAMH,WAAW,CAACI,OAAD,EAAUN,cAAc,CAACS,MAAzB,EAAiCL,OAAjC,CAAjB;AACD;AAED;;AACA;;AACA;;AACA,OAAO,UAAUM,kBAAV,GAA+B;AACpC,SAAM,IAAN,EAAY;AACV,UAAM;AAACN,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAA2B,MAAMP,IAAI,CAACE,cAAc,CAACW,cAAf,CAA8BZ,OAA9B,CAAD,CAA3C;AACA,UAAMF,IAAI,CAACM,kBAAD,EAAqBC,OAArB,EAA8BC,aAA9B,CAAV;AACD;AACF","sourcesContent":["import {fork, take} from 'redux-saga/effects';\nimport {REQUEST} from '../actions';\nimport * as commentActions from '../actions/comment'\nimport * as api from '../api/youtube-api';\nimport {fetchEntity} from './index';\n\nexport function* fetchCommentThread(videoId, nextPageToken) {\n  const request = api.buildCommentThreadRequest.bind(null, videoId, nextPageToken);\n  yield fetchEntity(request, commentActions.thread, videoId);\n}\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchCommentThread() {\n  while(true) {\n    const {videoId, nextPageToken} = yield take(commentActions.COMMENT_THREAD[REQUEST]);\n    yield fork(fetchCommentThread, videoId, nextPageToken);\n  }\n}"]},"metadata":{},"sourceType":"module"}