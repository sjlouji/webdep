{"ast":null,"code":"const UNITS = ['K', 'M', 'B', 'T']; // https://stackoverflow.com/a/28608086/2328833\n\nexport function getShortNumberString(number) {\n  const shouldShowDecimalPlace = UNITS.some((element, index) => {\n    const lowerBound = Math.pow(1000, index + 1);\n    const upperBound = lowerBound + lowerBound * 10;\n    return number > lowerBound && number < upperBound;\n  });\n  const digits = shouldShowDecimalPlace ? 1 : 0;\n\n  for (let i = UNITS.length - 1; i >= 0; i--) {\n    const decimal = Math.pow(1000, i + 1);\n\n    if (number >= decimal) {\n      return (number / decimal).toFixed(digits) + UNITS[i];\n    }\n  }\n\n  return number.toString();\n}","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/services/number/number-format.js"],"names":["UNITS","getShortNumberString","number","shouldShowDecimalPlace","some","element","index","lowerBound","Math","pow","upperBound","digits","i","length","decimal","toFixed","toString"],"mappings":"AAAA,MAAMA,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAd,C,CAEA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AAC3C,QAAMC,sBAAsB,GAAGH,KAAK,CAACI,IAAN,CAAW,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5D,UAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAeH,KAAK,GAAG,CAAvB,CAAnB;AACA,UAAMI,UAAU,GAAGH,UAAU,GAAGA,UAAU,GAAG,EAA7C;AACA,WAAQL,MAAM,GAAGK,UAAT,IAAuBL,MAAM,GAAGQ,UAAxC;AACD,GAJ8B,CAA/B;AAKA,QAAMC,MAAM,GAAGR,sBAAsB,GAAG,CAAH,GAAO,CAA5C;;AACA,OAAK,IAAIS,CAAC,GAAGZ,KAAK,CAACa,MAAN,GAAe,CAA5B,EAA+BD,CAAC,IAAI,CAApC,EAAuCA,CAAC,EAAxC,EAA4C;AAC1C,UAAME,OAAO,GAAGN,IAAI,CAACC,GAAL,CAAS,IAAT,EAAeG,CAAC,GAAG,CAAnB,CAAhB;;AAEA,QAAIV,MAAM,IAAIY,OAAd,EAAuB;AACrB,aAAO,CAACZ,MAAM,GAAGY,OAAV,EAAmBC,OAAnB,CAA2BJ,MAA3B,IAAqCX,KAAK,CAACY,CAAD,CAAjD;AACD;AACF;;AACD,SAAOV,MAAM,CAACc,QAAP,EAAP;AACD","sourcesContent":["const UNITS = ['K', 'M', 'B', 'T'];\n\n// https://stackoverflow.com/a/28608086/2328833\nexport function getShortNumberString(number) {\n  const shouldShowDecimalPlace = UNITS.some((element, index) => {\n    const lowerBound = Math.pow(1000, index + 1);\n    const upperBound = lowerBound + lowerBound * 10;\n    return  number > lowerBound && number < upperBound\n  });\n  const digits = shouldShowDecimalPlace ? 1 : 0;\n  for (let i = UNITS.length - 1; i >= 0; i--) {\n    const decimal = Math.pow(1000, i + 1);\n\n    if (number >= decimal) {\n      return (number / decimal).toFixed(digits) + UNITS[i];\n    }\n  }\n  return number.toString();\n}"]},"metadata":{},"sourceType":"module"}