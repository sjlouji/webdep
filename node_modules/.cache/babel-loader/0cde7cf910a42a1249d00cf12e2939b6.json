{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/RecentVideos/RecentVideos.js\";\nimport React, { Component } from 'react';\nimport { loadYData } from '../../store/actions/youtube';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport store from '../../store/configureStore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport { Row, Col } from 'react-bootstrap';\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Box from '@material-ui/core/Box';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\nexport class RecentVideos extends Component {\n  componentDidMount() {\n    this.props.loadYData();\n    console.log(this.props);\n  }\n\n  render() {\n    console.log(this.props.ydata);\n    const loading = this.props;\n    console.log(this.props);\n    return (\n      /*#__PURE__*/\n      // <Row>\n      //     {this.props.ydata?this.props.ydata\n      //     .map((data)=>(\n      //     <Col xs={3}>\n      //         <div style={{ maxWidth: '325px'}}  elevation={0}>\n      //             <div>\n      //                 <CardMedia\n      //                 component=\"img\"\n      //                 alt=\"Contemplative Reptile\"\n      //                 height=\"140\"\n      //                 image={data.thumbnailsHight}\n      //                 title=\"Contemplative Reptile\"\n      //                 />\n      //                 <CardContent>\n      //                 <Typography gutterBottom variant=\"h6\" component=\"h5\">\n      //                     {data.title || <Skeleton />}\n      //                 </Typography>\n      //                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n      //                     {data.channelTitle || <Skeleton />}\n      //                 </Typography>\n      //                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n      //                     <Moment toNow>{data.publishedAt  || <Skeleton />}</Moment>\n      //                 </Typography>\n      //                 </CardContent>\n      //             </div>\n      //         </div>\n      //     </Col>\n      //     )):\n      //         \"\"\n      //   } \n      // </Row>\n      React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, (loading ? Array.from(new Array(6)) : data).map((item, index) => /*#__PURE__*/React.createElement(Box, {\n        key: index,\n        width: 210,\n        marginRight: 0.5,\n        my: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, item ? /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: 210,\n          height: 118\n        },\n        alt: item.title,\n        src: item.src,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(Skeleton, {\n        variant: \"rect\",\n        width: 210,\n        height: 118,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }), item ? /*#__PURE__*/React.createElement(Box, {\n        pr: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"body2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, item.title), /*#__PURE__*/React.createElement(Typography, {\n        display: \"block\",\n        variant: \"caption\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, item.channel), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, `${item.views} â€¢ ${item.createdAt}`)) : /*#__PURE__*/React.createElement(Box, {\n        pt: 0.5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Skeleton, {\n        width: \"60%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      })))))\n    );\n  }\n\n}\nRecentVideos.propTypes = {\n  loadYData: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  ydata: PropTypes.array.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.youtube.isLoading,\n  ydata: state.youtube.ydata\n});\n\nexport default connect(mapStateToProps, {\n  loadYData\n})(RecentVideos);","map":{"version":3,"sources":["/Users/joan/Documents/Drive/Projects/punithargal.org/api/frontend/src/pages/RecentVideos/RecentVideos.js"],"names":["React","Component","loadYData","connect","PropTypes","store","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","withStyles","Row","Col","Moment","Skeleton","Box","useStyles","root","maxWidth","media","height","RecentVideos","componentDidMount","props","console","log","render","ydata","loading","Array","from","data","map","item","index","width","title","src","channel","views","createdAt","propTypes","func","isRequired","isLoading","bool","array","mapStateToProps","state","youtube"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {loadYData} from '../../store/actions/youtube'; \nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport store from '../../store/configureStore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport {Row, Col} from 'react-bootstrap'\nimport Moment from 'react-moment';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n  \n\nexport class RecentVideos extends Component {\n    static propTypes = {\n        loadYData: PropTypes.func.isRequired,\n        isLoading: PropTypes.bool,\n        ydata:  PropTypes.array.isRequired,\n        loading: PropTypes.bool,\n      };\n\n      componentDidMount(){\n        this.props.loadYData()\n        console.log(this.props)\n      }\n      \n    render() {\n        console.log(this.props.ydata)\n        const loading = this.props;\n        console.log(this.props)\n        return (\n            // <Row>\n            //     {this.props.ydata?this.props.ydata\n            //     .map((data)=>(\n            //     <Col xs={3}>\n            //         <div style={{ maxWidth: '325px'}}  elevation={0}>\n            //             <div>\n            //                 <CardMedia\n            //                 component=\"img\"\n            //                 alt=\"Contemplative Reptile\"\n            //                 height=\"140\"\n            //                 image={data.thumbnailsHight}\n            //                 title=\"Contemplative Reptile\"\n            //                 />\n            //                 <CardContent>\n            //                 <Typography gutterBottom variant=\"h6\" component=\"h5\">\n            //                     {data.title || <Skeleton />}\n            //                 </Typography>\n            //                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            //                     {data.channelTitle || <Skeleton />}\n            //                 </Typography>\n            //                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            //                     <Moment toNow>{data.publishedAt  || <Skeleton />}</Moment>\n            //                 </Typography>\n            //                 </CardContent>\n            //             </div>\n            //         </div>\n            //     </Col>\n            //     )):\n            //         \"\"\n            //   } \n            // </Row>\n            <Grid container wrap=\"nowrap\">\n            {(loading ? Array.from(new Array(6)) : data).map((item, index) => (\n              <Box key={index} width={210} marginRight={0.5} my={5}>\n                {item ? (\n                  <img style={{ width: 210, height: 118 }} alt={item.title} src={item.src} />\n                ) : (\n                  <Skeleton variant=\"rect\" width={210} height={118} />\n                )}\n      \n                {item ? (\n                  <Box pr={2}>\n                    <Typography gutterBottom variant=\"body2\">\n                      {item.title}\n                    </Typography>\n                    <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n                      {item.channel}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                      {`${item.views} â€¢ ${item.createdAt}`}\n                    </Typography>\n                  </Box>\n                ) : (\n                  <Box pt={0.5}>\n                    <Skeleton />\n                    <Skeleton width=\"60%\" />\n                  </Box>\n                )}\n              </Box>\n            ))}\n          </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.youtube.isLoading,\n    ydata: state.youtube.ydata,\n  });\n\nexport default connect(mapStateToProps, {loadYData})(RecentVideos)"]},"metadata":{},"sourceType":"module"}