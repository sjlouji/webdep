{"version":3,"sources":["pages/Settings/Accounts/Account.js","components/SettingTab/Tab.js","pages/Settings/Settings.js"],"names":["Account","console","log","this","props","auth","isAuthenticated","Grid","container","item","xs","user","first_name","Button","variant","color","onClick","logout","style","float","to","Component","connect","state","TabPanel","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","ScrollableTabsButtonAuto","classes","React","useState","setValue","className","AppBar","position","elevation","Tabs","onChange","event","newValue","indicatorColor","textColor","scrollButtons","aria-label","Tab","label","Settings"],"mappings":"qTAOcA,EAAd,uKAGQ,OADAC,QAAQC,IAAIC,KAAKC,MAAMC,MAClBF,KAAKC,MAAMC,KAAKC,gBAIjB,6BACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAOE,MAAI,EAACC,GAAI,GAAhB,SACWP,KAAKC,MAAMC,KAAKM,KAAKR,KAAKC,MAAMC,KAAKM,KAAKC,WAAW,IAEhE,kBAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,kBAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,YAAYC,QAASb,KAAKC,MAAMa,OAAQC,MAAO,CAAEC,MAAO,UAA1F,aATL,kBAAC,IAAD,CAAUC,GAAG,uBAJhC,GAA8BC,aAuBfC,eAHS,SAACC,GAAD,MAAY,CAChClB,KAAMkB,EAAMlB,QAEyB,CAAEY,YAA5BK,CAAsCtB,GCpBrD,SAASwB,EAASpB,GAAQ,IAChBqB,EAAqCrB,EAArCqB,SAAUC,EAA2BtB,EAA3BsB,MAAOC,EAAoBvB,EAApBuB,MAAUC,EADZ,YACsBxB,EADtB,8BAGvB,OACE,kBAACyB,EAAA,EAAD,eACEC,UAAU,MACVC,KAAK,WACLC,OAAQN,IAAUC,EAClBM,GAAE,mCAA8BN,GAChCO,kBAAA,8BAAwCP,IACpCC,GAEHF,IAAUC,GAAS,kBAACQ,EAAA,EAAD,CAAKC,EAAG,GAAIX,IAWtC,SAASY,EAAUV,GACjB,MAAO,CACLM,GAAG,uBAAD,OAAyBN,GAC3B,gBAAgB,4BAAhB,OAA6CA,IAIjD,IAAMW,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,MAAO,OACPC,gBAAiBJ,EAAMK,QAAQC,WAAWC,WAI/B,SAASC,IACtB,IAAMC,EAAUX,IADiC,EAEvBY,IAAMC,SAAS,GAFQ,mBAE1CzB,EAF0C,KAEnC0B,EAFmC,KAQjD,OACE,yBAAKC,UAAWJ,EAAQR,MACtB,kBAACa,EAAA,EAAD,CAAQC,SAAS,SAASxC,MAAM,UAAUyC,UAAW,GACnD,kBAACC,EAAA,EAAD,CACE/B,MAAOA,EACPgC,SATa,SAACC,EAAOC,GAC3BR,EAASQ,IASHC,eAAe,UACfC,UAAU,UACVhD,QAAQ,aACRiD,cAAc,OACd7C,MAAO,GACP8C,aAAW,gCAEX,kBAACC,EAAA,EAAD,eAAKC,MAAM,YAAe7B,EAAU,KACpC,kBAAC4B,EAAA,EAAD,eAAKC,MAAM,WAAc7B,EAAU,KACnC,kBAAC4B,EAAA,EAAD,eAAKC,MAAM,cAAiB7B,EAAU,KACtC,kBAAC4B,EAAA,EAAD,eAAKC,MAAM,aAAgB7B,EAAU,KACrC,kBAAC4B,EAAA,EAAD,eAAKC,MAAM,aAAgB7B,EAAU,KACrC,kBAAC4B,EAAA,EAAD,eAAKC,MAAM,YAAe7B,EAAU,KACpC,kBAAC4B,EAAA,EAAD,eAAKC,MAAM,cAAiB7B,EAAU,OAG1C,kBAACb,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAC7B,kBAAC,EAAD,OAEF,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,YAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,cAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,aAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,aAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,YAGA,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,GAA/B,e,IC7FewC,E,uKAEb,OACI,kBAACnB,EAAD,U,GAH0B3B","file":"static/js/15.219afc2a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from '@material-ui/core'\nimport { logout } from '../../../store/actions/auth'\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { Redirect } from 'react-router-dom';\n\nexport  class Account extends Component {\n    render() {\n        console.log(this.props.auth);\n        if (!this.props.auth.isAuthenticated) {\n            return <Redirect to=\"/account/login\" />;\n          }\n        return (\n            <div>\n                <Grid container>\n                    <Grid  item xs={6}>\n                        Hello {this.props.auth.user?this.props.auth.user.first_name:''}\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={this.props.logout} style={{ float: 'right'  }}>Logout</Button>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n  });\nexport default connect(mapStateToProps,  { logout })(Account)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Account from  '../../pages/Settings/Accounts/Account'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\" elevation={0}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          style={{ }}\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Accounts\" {...a11yProps(0)} />\n          <Tab label=\"Privacy\" {...a11yProps(1)} />\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\n          <Tab label=\"Item Four\" {...a11yProps(3)} />\n          <Tab label=\"Item Five\" {...a11yProps(4)} />\n          <Tab label=\"Item Six\" {...a11yProps(5)} />\n          <Tab label=\"Item Seven\" {...a11yProps(6)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Account/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        Item Two\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Item Three\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        Item Four\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        Item Five\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n        Item Six\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n        Item Seven\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\nimport ScrollableTabsButtonAuto from '../../components/SettingTab/Tab'\n\nexport default class Settings extends Component {\n    render() {\n        return (    \n            <ScrollableTabsButtonAuto />\n        )\n    }\n}\n"],"sourceRoot":""}